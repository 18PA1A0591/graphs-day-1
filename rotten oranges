class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        m=len(grid)
        n=len(grid[0])
        time=0
        queue=[]
        directions=[(1,0), (-1,0), (0,1), (0,-1)]
        f=0
        for i in range(m):
            for j in range(n):
                if(grid[i][j]==2):
                    queue.append((i,j))
                if(grid[i][j]==1):
                    f=f+1
        if(f==0):
            return 0
        while(len(queue)>0):
            size=len(queue)
            for i in range(size):
                x,y=queue.pop(0)
                for dir in directions:
                    nx=x+dir[0]
                    ny=y+dir[1]
                    if(0<=nx<m and 0<=ny<n and grid[nx][ny]==1):
                        grid[nx][ny]=2
                        queue.append((nx,ny))
                        f=f-1
            time=time+1
        if(f==0):
            return time-1
        else:
            return -1
                
           
